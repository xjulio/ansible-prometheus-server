- name: Create an instance
  hosts: localhost
  gather_facts: no
  connection: local
  vars:
      gcp_project: "{{ gcp_project }}"
      gcp_cred_kind: "{{ gcp_cred_kind }}"
      gcp_cred_file: "{{ gcp_cred_file }}"
      service_email: "{{ gcp_service_email }}"
      zone: "{{ gcp_zone }}"
      region: "{{ gcp_region }}"
      startup_script_content: "{{ lookup('file', '../scripts/startup_script.sh') }}"

  tasks:
   - name: Generate SSH keys
     shell: ssh-keygen -t rsa -N "" -f ../keys/ansible_rsa -C ansible
     args:
       creates: ../keys/ansible_rsa
       
   - name: Include ssh vars
     include_vars: ../vars/main.yml
    
   - debug:
        msg: "{{ ssh_key_content }}"  
   
   - name: create external IP
     gce_eip:
        service_account_email: "{{ service_email }}"
        credentials_file: "{{ gcp_cred_file }}"
        project_id: "{{ gcp_project }}"
        name: prometheus-ip
        region: "{{ region }}"
        state: present
     register: external_ip
     
   - debug:
       msg: "External IP: {{ external_ip }}"  

   - name: Create Firewall Rule w/Source Range
     gce_net:
       service_account_email: "{{ service_email }}"
       credentials_file: "{{ gcp_cred_file }}"
       project_id: "{{ gcp_project }}"
       subnet_region: "{{ region }}"
       name: default
       fwname: "prometheus-fw-rule"
       allowed: tcp:9090,22,3000
       src_range: ['0.0.0.0/0']
       target_tags: "prometheus-fw-tag"
       state: present
     register: prometheus_net     
     tags:
         - firewall
  
   - name: create a instance
     gce:
         zone: "{{ zone }}"
         project_id: "{{ gcp_project }}"
         service_account_email: "{{ service_email }}"
         credentials_file: "{{ gcp_cred_file }}"
         instance_names: centos-prometheus-server
         machine_type: n1-standard-1
         image: centos-7
         disk_size: 10
         external_ip: "{{ external_ip.address }}"
         tags: "prometheus-fw-tag"
         metadata : '{ "startup-script" : "{{ startup_script_content }}", "sshKeys":"ansible:{{ ssh_key_content }}", "sshKeys":"xjulio:{{ ssh_xjulio_key_content }}" }'
         state: present
